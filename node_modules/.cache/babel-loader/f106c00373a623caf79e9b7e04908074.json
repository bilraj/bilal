{"ast":null,"code":"import _regeneratorRuntime from \"/Users/bilraj/Desktop/frontend_workshop-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/bilraj/Desktop/frontend_workshop-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/bilraj/Desktop/frontend_workshop-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/bilraj/Desktop/frontend_workshop-master/src/Deposit.js\";\nimport React, { useState } from 'react';\nimport { getDepositRequestInfoTemplate, createDepositTicket } from './api';\nexport var Deposit = function Deposit(_ref) {\n  var Products = _ref.Products,\n      AccountId = _ref.AccountId;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      address = _useState2[0],\n      setAddress = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      product = _useState4[0],\n      setProduct = _useState4[1];\n\n  return React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"Deposit Info\"), React.createElement(\"select\", {\n    onChange:\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(event) {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log(event.target.value);\n                setProduct(event.target.value);\n                _context.next = 4;\n                return getDepositRequestInfoTemplate({\n                  AccountId: AccountId,\n                  ProductId: event.target.value\n                });\n\n              case 4:\n                result = _context.sent;\n                result ? setAddress(result) : setAddress(false);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Select Product to Deposit\"), Products.map(function (x) {\n    return React.createElement(\"option\", {\n      key: x.ProductId,\n      value: x.ProductId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, x.Product);\n  })), address ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Deposit Address: \", address) : React.createElement(DepositForm, {\n    AccountId: AccountId,\n    ProductSymbol: 'USD',\n    AssetId: product,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }));\n};\n\nvar DepositForm = function DepositForm(_ref3) {\n  var AssetId = _ref3.AssetId,\n      ProductSymbol = _ref3.ProductSymbol,\n      AccountId = _ref3.AccountId;\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      fullname = _useState6[0],\n      setFullName = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      Amount = _useState8[0],\n      setAmount = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      comments = _useState10[0],\n      setComments = _useState10[1];\n\n  return React.createElement(\"form\", {\n    onSubmit: function onSubmit(event) {\n      createDepositTicket({\n        AssetId: AssetId,\n        fullname: fullname,\n        Amount: Amount,\n        comments: comments,\n        ProductSymbol: ProductSymbol,\n        AccountId: AccountId\n      });\n      event.preventDefault();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Name:\", React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    value: fullname,\n    onChange: function onChange(event) {\n      return setFullName(event.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), \"Amount:\", React.createElement(\"input\", {\n    type: \"number\",\n    name: \"amount\",\n    value: Amount,\n    onChange: function onChange(event) {\n      return setAmount(event.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), \"Comments:\", React.createElement(\"input\", {\n    type: \"text\",\n    name: \"comments\",\n    value: comments,\n    onChange: function onChange(event) {\n      return setComments(event.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Create Deposit Ticket\"));\n};","map":{"version":3,"sources":["/Users/bilraj/Desktop/frontend_workshop-master/src/Deposit.js"],"names":["React","useState","getDepositRequestInfoTemplate","createDepositTicket","Deposit","Products","AccountId","address","setAddress","product","setProduct","event","console","log","target","value","ProductId","result","map","x","Product","DepositForm","AssetId","ProductSymbol","fullname","setFullName","Amount","setAmount","comments","setComments","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { getDepositRequestInfoTemplate, createDepositTicket } from './api';\n\nexport const Deposit = ({ Products, AccountId }) => {\n  const [address, setAddress] = useState('');\n  const [product, setProduct] = useState(0);\n  return (\n    <>\n      <h2>Deposit Info</h2>\n      <select\n        onChange={async event => {\n          console.log(event.target.value);\n          setProduct(event.target.value);\n          const result = await getDepositRequestInfoTemplate({\n            AccountId,\n            ProductId: event.target.value\n          });\n          result ? setAddress(result) : setAddress(false);\n        }}>\n        <option value={0}>Select Product to Deposit</option>\n        {Products.map(x => (\n          <option key={x.ProductId} value={x.ProductId}>\n            {x.Product}\n          </option>\n        ))}\n      </select>\n      {address ? (\n        <div>Deposit Address: {address}</div>\n      ) : (\n        <DepositForm\n          AccountId={AccountId}\n          ProductSymbol={'USD'}\n          AssetId={product}\n        />\n      )}\n    </>\n  );\n};\n\nconst DepositForm = ({ AssetId, ProductSymbol, AccountId }) => {\n  const [fullname, setFullName] = useState('');\n  const [Amount, setAmount] = useState('');\n  const [comments, setComments] = useState('');\n  return (\n    <form\n      onSubmit={event => {\n        createDepositTicket({\n          AssetId,\n          fullname,\n          Amount,\n          comments,\n          ProductSymbol,\n          AccountId\n        });\n        event.preventDefault();\n      }}>\n      Name:\n      <input\n        type=\"text\"\n        name=\"name\"\n        value={fullname}\n        onChange={event => setFullName(event.target.value)}\n      />\n      <br />\n      Amount:\n      <input\n        type=\"number\"\n        name=\"amount\"\n        value={Amount}\n        onChange={event => setAmount(event.target.value)}\n      />\n      <br />\n      Comments:\n      <input\n        type=\"text\"\n        name=\"comments\"\n        value={comments}\n        onChange={event => setComments(event.target.value)}\n      />\n      <br />\n      <button type=\"submit\">Create Deposit Ticket</button>\n    </form>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}