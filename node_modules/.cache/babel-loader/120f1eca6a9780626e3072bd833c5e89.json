{"ast":null,"code":"import _toConsumableArray from \"/Users/bilraj/Desktop/frontend_workshop-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/bilraj/Desktop/frontend_workshop-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nexport var initialState = {\n  User: {},\n  Balances: [],\n  loggedIn: false,\n  Instruments: [],\n  Products: [],\n  selectedInstrument: {},\n  level1: {},\n  buys: {},\n  sells: {},\n  trades: [],\n  orders: [],\n  meta: {\n    tradesSub: false,\n    accountsSub: false,\n    instrumentsLoaded: false,\n    productsLoaded: false\n  }\n};\nexport var reducer = function reducer(state, action) {\n  var type = action.type,\n      payload = action.payload;\n\n  switch (type) {\n    case 'SET_USER':\n      return _objectSpread({}, state, {\n        User: payload\n      });\n\n    case 'SET_LOGGED_IN':\n      return _objectSpread({}, state, {\n        loggedIn: payload\n      });\n\n    case 'SET_INSTRUMENTS':\n      return _objectSpread({}, state, {\n        Instruments: payload\n      });\n\n    case 'SET_PRODUCTS':\n      return _objectSpread({}, state, {\n        Products: payload\n      });\n\n    case 'SET_SELECTED_INSTRUMENT':\n      return _objectSpread({}, state, {\n        selectedInstrument: payload\n      });\n\n    case 'SET_LEVEL_1':\n      return _objectSpread({}, state, {\n        level1: payload\n      });\n\n    case 'ADD_BUY':\n      var Price = payload.Price,\n          ActionType = payload.ActionType;\n      var buys = state.buys;\n\n      if (ActionType === 2) {\n        delete buys[Price];\n      } else {\n        buys[Price] = payload;\n      }\n\n      return _objectSpread({}, state, {\n        buys: buys\n      });\n\n    case 'ADD_SELL':\n      {\n        var _Price = payload.Price,\n            _ActionType = payload.ActionType;\n        var sells = state.sells;\n\n        if (_ActionType === 2) {\n          delete sells[_Price];\n        } else {\n          sells[_Price] = payload;\n        }\n\n        return _objectSpread({}, state, {\n          sells: sells\n        });\n      }\n\n    case 'CLEAR_ORDERBOOK':\n      {\n        return _objectSpread({}, state, {\n          buys: {},\n          sells: {}\n        });\n      }\n\n    case 'ADD_TRADE':\n      {\n        var trades = state.trades;\n        var newTrades = [payload].concat(_toConsumableArray(trades));\n        var myNewTrades = newTrades.slice(0, 10);\n        return _objectSpread({}, state, {\n          trades: myNewTrades\n        });\n      }\n\n    case 'CLEAR_TRADES':\n      {\n        return _objectSpread({}, state, {\n          trades: []\n        });\n      }\n\n    case 'ADD_BALANCES':\n      {\n        return _objectSpread({}, state, {\n          Balances: payload\n        });\n      }\n\n    case 'UPDATE_BALANCE':\n      {\n        var Balances = state.Balances;\n        var filteredBalances = Balances.filter(function (balance) {\n          return !(balance.ProductId === payload.ProductId);\n        });\n        return _objectSpread({}, state, {\n          Balances: [payload].concat(_toConsumableArray(filteredBalances))\n        });\n      }\n\n    case 'ADD_ORDERS':\n      {\n        return _objectSpread({}, state, {\n          orders: payload\n        });\n      }\n\n    case 'UPDATE_ORDERS':\n      {\n        var orders = state.orders;\n        var filteredOrders = orders.filter(function (order) {\n          return !(order.OrderId === payload.OrderId);\n        });\n        return _objectSpread({}, state, {\n          orders: [payload].concat(_toConsumableArray(filteredOrders))\n        });\n      }\n\n    case 'SUBSCRIBED_TO_TRADES':\n      var meta = state.meta;\n      meta.tradesSub = true;\n      return _objectSpread({}, state, {\n        meta: meta\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/bilraj/Desktop/frontend_workshop-master/src/reducer.js"],"names":["initialState","User","Balances","loggedIn","Instruments","Products","selectedInstrument","level1","buys","sells","trades","orders","meta","tradesSub","accountsSub","instrumentsLoaded","productsLoaded","reducer","state","action","type","payload","Price","ActionType","newTrades","myNewTrades","slice","filteredBalances","filter","balance","ProductId","filteredOrders","order","OrderId"],"mappings":"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","sourcesContent":["export const initialState = {\n  User: {},\n  Balances: [],\n  loggedIn: false,\n  Instruments: [],\n  Products: [],\n  selectedInstrument: {},\n  level1: {},\n  buys: {},\n  sells: {},\n  trades: [],\n  orders: [],\n  meta: {\n    tradesSub: false,\n    accountsSub: false,\n    instrumentsLoaded: false,\n    productsLoaded: false\n  }\n};\n\nexport const reducer = (state, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case 'SET_USER':\n      return { ...state, User: payload };\n    case 'SET_LOGGED_IN':\n      return { ...state, loggedIn: payload };\n    case 'SET_INSTRUMENTS':\n      return { ...state, Instruments: payload };\n    case 'SET_PRODUCTS':\n      return { ...state, Products: payload };\n    case 'SET_SELECTED_INSTRUMENT':\n      return { ...state, selectedInstrument: payload };\n    case 'SET_LEVEL_1':\n      return { ...state, level1: payload };\n    case 'ADD_BUY':\n      const { Price, ActionType } = payload;\n      const { buys } = state;\n      if (ActionType === 2) {\n        delete buys[Price];\n      } else {\n        buys[Price] = payload;\n      }\n      return { ...state, buys };\n    case 'ADD_SELL': {\n      const { Price, ActionType } = payload;\n      const { sells } = state;\n      if (ActionType === 2) {\n        delete sells[Price];\n      } else {\n        sells[Price] = payload;\n      }\n      return { ...state, sells };\n    }\n    case 'CLEAR_ORDERBOOK': {\n      return { ...state, buys: {}, sells: {} };\n    }\n    case 'ADD_TRADE': {\n      const { trades } = state;\n      const newTrades = [payload, ...trades];\n      const myNewTrades = newTrades.slice(0, 10);\n      return { ...state, trades: myNewTrades };\n    }\n    case 'CLEAR_TRADES': {\n      return { ...state, trades: [] };\n    }\n    case 'ADD_BALANCES': {\n      return { ...state, Balances: payload };\n    }\n    case 'UPDATE_BALANCE': {\n      const { Balances } = state;\n      const filteredBalances = Balances.filter(\n        balance => !(balance.ProductId === payload.ProductId)\n      );\n      return { ...state, Balances: [payload, ...filteredBalances] };\n    }\n    case 'ADD_ORDERS': {\n      return { ...state, orders: payload };\n    }\n    case 'UPDATE_ORDERS': {\n      const { orders } = state;\n      const filteredOrders = orders.filter(\n        order => !(order.OrderId === payload.OrderId)\n      );\n      return { ...state, orders: [payload, ...filteredOrders] };\n    }\n    case 'SUBSCRIBED_TO_TRADES':\n      const { meta } = state;\n      meta.tradesSub = true;\n      return { ...state, meta };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}