{"ast":null,"code":"import _slicedToArray from \"/Users/bilraj/Desktop/frontend_workshop-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/bilraj/Desktop/frontend_workshop-master/src/Balances.js\";\nimport React, { useState } from 'react';\nimport { useBalances } from './api';\nimport { Deposit } from './Deposit';\nimport { Withdraw } from './Withdraw';\nexport var Balances = function Balances(_ref) {\n  var balances = _ref.balances,\n      AccountId = _ref.AccountId,\n      loggedIn = _ref.loggedIn,\n      Products = _ref.Products,\n      dispatch = _ref.dispatch;\n  useBalances(AccountId, loggedIn, dispatch);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      deposit = _useState2[0],\n      setDeposit = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      withdraw = _useState4[0],\n      setWithdraw = _useState4[1];\n\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Balances\"), React.createElement(\"button\", {\n    onClick: function onClick() {\n      setDeposit(!deposit);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Deposit\"), React.createElement(\"button\", {\n    onClick: function onClick() {\n      setWithdraw(!withdraw);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Withdraw\"), React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Product\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Balance\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, balances.map(function (_ref2) {\n    var ProductId = _ref2.ProductId,\n        ProductSymbol = _ref2.ProductSymbol,\n        Amount = _ref2.Amount;\n    return React.createElement(\"tr\", {\n      key: \"\".concat(ProductId, \"-\").concat(ProductSymbol),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, ProductSymbol), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, Amount));\n  }))), deposit && React.createElement(Deposit, {\n    AccountId: AccountId,\n    Products: Products,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), withdraw && React.createElement(Withdraw, {\n    Products: Products,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }));\n};","map":{"version":3,"sources":["/Users/bilraj/Desktop/frontend_workshop-master/src/Balances.js"],"names":["React","useState","useBalances","Deposit","Withdraw","Balances","balances","AccountId","loggedIn","Products","dispatch","deposit","setDeposit","withdraw","setWithdraw","map","ProductId","ProductSymbol","Amount"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,QAAT,QAAyB,YAAzB;AAEA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAMlB;AAAA,MALJC,QAKI,QALJA,QAKI;AAAA,MAJJC,SAII,QAJJA,SAII;AAAA,MAHJC,QAGI,QAHJA,QAGI;AAAA,MAFJC,QAEI,QAFJA,QAEI;AAAA,MADJC,QACI,QADJA,QACI;AACJR,EAAAA,WAAW,CAACK,SAAD,EAAYC,QAAZ,EAAsBE,QAAtB,CAAX;;AADI,kBAE0BT,QAAQ,CAAC,KAAD,CAFlC;AAAA;AAAA,MAEGU,OAFH;AAAA,MAEYC,UAFZ;;AAAA,mBAG4BX,QAAQ,CAAC,KAAD,CAHpC;AAAA;AAAA,MAGGY,QAHH;AAAA,MAGaC,WAHb;;AAIJ,SACE,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AACE,IAAA,OAAO,EAAE,mBAAM;AACbF,MAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACD,KAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,EAQE;AACE,IAAA,OAAO,EAAE,mBAAM;AACbG,MAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACD,KAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,EAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF,CADF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,QAAQ,CAACS,GAAT,CAAa;AAAA,QAAGC,SAAH,SAAGA,SAAH;AAAA,QAAcC,aAAd,SAAcA,aAAd;AAAA,QAA6BC,MAA7B,SAA6BA,MAA7B;AAAA,WACZ;AAAI,MAAA,GAAG,YAAKF,SAAL,cAAkBC,aAAlB,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,aAAL,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKC,MAAL,CAFF,CADY;AAAA,GAAb,CADH,CARF,CAdF,EA+BGP,OAAO,IAAI,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAEJ,SAApB;AAA+B,IAAA,QAAQ,EAAEE,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA/Bd,EAgCGI,QAAQ,IAAI,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAEJ,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhCf,CADF;AAoCD,CA9CM","sourcesContent":["import React, { useState } from 'react';\nimport { useBalances } from './api';\nimport { Deposit } from './Deposit';\nimport { Withdraw } from './Withdraw';\n\nexport const Balances = ({\n  balances,\n  AccountId,\n  loggedIn,\n  Products,\n  dispatch\n}) => {\n  useBalances(AccountId, loggedIn, dispatch);\n  const [deposit, setDeposit] = useState(false);\n  const [withdraw, setWithdraw] = useState(false);\n  return (\n    <>\n      <h1>Balances</h1>\n      <button\n        onClick={() => {\n          setDeposit(!deposit);\n        }}>\n        Deposit\n      </button>\n      <button\n        onClick={() => {\n          setWithdraw(!withdraw);\n        }}>\n        Withdraw\n      </button>\n      <table>\n        <tbody>\n          <tr>\n            <th>Product</th>\n            <th>Balance</th>\n            <th />\n          </tr>\n        </tbody>\n        <tbody>\n          {balances.map(({ ProductId, ProductSymbol, Amount }) => (\n            <tr key={`${ProductId}-${ProductSymbol}`}>\n              <td>{ProductSymbol}</td>\n              <td>{Amount}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      {deposit && <Deposit AccountId={AccountId} Products={Products} />}\n      {withdraw && <Withdraw Products={Products} />}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}